{"version":3,"sources":["troll-face.png","header.component.jsx","memeGenerator.component.jsx","App.js","index.js"],"names":["Header","src","trollFace","alt","MemeGenerator","handleChange","event","target","name","value","setState","getRandomImg","preventDefault","randomIDX","Math","floor","random","state","allMemeImgs","length","randomImage","url","randomImg","topText","bottomText","fetch","then","response","json","jsonData","data","memes","onSubmit","this","type","placeholder","onChange","className","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NAAe,G,MAAA,IAA0B,wC,OCY1BA,EATA,WACd,OACC,mCACC,qBAAKC,IAAKC,EAAWC,IAAI,aACzB,mD,OCgEYC,E,kDAlEd,aAAe,IAAD,8BACb,gBAmBDC,aAAe,SAACC,GACf,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAiBF,EAAOC,KAtBX,EAyBdE,aAAe,SAACL,GACfA,EAAMM,iBACN,IAAMC,EAAYC,KAAKC,MACtBD,KAAKE,SAAW,EAAKC,MAAMC,YAAYC,QAElCC,EAAc,EAAKH,MAAMC,YAAYL,GAAWQ,IACtD,EAAKX,SAAS,CAAEY,UAAWF,KA7B3B,EAAKH,MAAQ,CACZM,QAAS,GACTC,WAAY,GACZF,UAAW,gCACXJ,YAAa,IAND,E,qDAUd,WAAqB,IAAD,OACnBO,MAAM,qCACJC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OACL,EAAKnB,SAAS,CACbQ,YAAaW,EAASC,KAAKC,a,oBAmB/B,WACC,OACC,gCACC,uBAAMC,SAAUC,KAAKtB,aAArB,UACC,uBACCuB,KAAK,OACLC,YAAY,WACZ3B,KAAK,UACLC,MAAOwB,KAAKhB,MAAMM,QAClBa,SAAUH,KAAK5B,eAGhB,uBACC6B,KAAK,OACLC,YAAY,cACZ3B,KAAK,aACLC,MAAOwB,KAAKhB,MAAMO,WAClBY,SAAUH,KAAK5B,eAEhB,wBAAQ6B,KAAK,SAAb,oBAGD,sBAAKG,UAAU,OAAf,UACC,qBAAKpC,IAAKgC,KAAKhB,MAAMK,UAAWnB,IAAI,SACpC,oBAAIkC,UAAU,MAAd,SAAqBJ,KAAKhB,MAAMM,UAChC,oBAAIc,UAAU,SAAd,SAAwBJ,KAAKhB,MAAMO,uB,GA5DZc,aCabC,E,4JAVd,WACC,OACC,gCACC,cAAC,EAAD,IACA,cAAC,EAAD,W,GALcD,aCAlBE,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,U","file":"static/js/main.91bdff5b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/troll-face.cafcb09e.png\";","import React from \"react\";\r\nimport trollFace from \"./troll-face.png\";\r\n\r\nconst Header = () => {\r\n\treturn (\r\n\t\t<header>\r\n\t\t\t<img src={trollFace} alt=\"logo-img\" />\r\n\t\t\t<p>Meme Generator</p>\r\n\t\t</header>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"./index.css\";\r\n\r\nclass MemeGenerator extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\ttopText: \"\",\r\n\t\t\tbottomText: \"\",\r\n\t\t\trandomImg: \"http://i.imgflip.com/1bij.jpg\",\r\n\t\t\tallMemeImgs: [],\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tfetch(\"https://api.imgflip.com/get_memes\")\r\n\t\t\t.then((response) => response.json())\r\n\t\t\t.then((jsonData) =>\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tallMemeImgs: jsonData.data.memes,\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t}\r\n\r\n\thandleChange = (event) => {\r\n\t\tconst { name, value } = event.target;\r\n\t\tthis.setState({ [name]: value });\r\n\t};\r\n\r\n\tgetRandomImg = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tconst randomIDX = Math.floor(\r\n\t\t\tMath.random() * this.state.allMemeImgs.length\r\n\t\t);\r\n\t\tconst randomImage = this.state.allMemeImgs[randomIDX].url;\r\n\t\tthis.setState({ randomImg: randomImage });\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<form onSubmit={this.getRandomImg}>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tplaceholder=\"Top Text\"\r\n\t\t\t\t\t\tname=\"topText\"\r\n\t\t\t\t\t\tvalue={this.state.topText}\r\n\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tplaceholder=\"Bottom Text\"\r\n\t\t\t\t\t\tname=\"bottomText\"\r\n\t\t\t\t\t\tvalue={this.state.bottomText}\r\n\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button type=\"submit\">Gen</button>\r\n\t\t\t\t</form>\r\n\r\n\t\t\t\t<div className=\"meme\">\r\n\t\t\t\t\t<img src={this.state.randomImg} alt=\"meme\" />\r\n\t\t\t\t\t<h2 className=\"top\">{this.state.topText}</h2>\r\n\t\t\t\t\t<h2 className=\"bottom\">{this.state.bottomText}</h2>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default MemeGenerator;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n\nimport Header from \"./header.component\";\nimport MemeGenerator from \"./memeGenerator.component\";\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Header />\n\t\t\t\t<MemeGenerator />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}